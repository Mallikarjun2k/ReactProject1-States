{"version":3,"sources":["components/ListItems.js","App.js","reportWebVitals.js","index.js"],"names":["ListItems","props","listItems","items","map","item","className","text","key","App","state","currentItem","addItem","bind","handleInput","setUpdate","e","preventDefault","newItem","this","setState","target","value","Date","now","console","log","id","onSubmit","type","placeholder","onChange","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAsBeA,MAlBf,SAAmBC,GAEf,IACMC,EADQD,EAAME,MACIC,KAAI,SAAAC,GAEzB,OAAO,qBAAKC,UAAU,OAAf,SACT,4BACG,mCAAMD,EAAKE,WAFsBF,EAAKG,QAM1C,OACQ,8BACGN,KCmEAO,G,wDA9Eb,WAAYR,GAAO,IAAD,8BAChB,cAAMA,IACDS,MAAQ,CACXP,MAAM,GACNQ,YAAY,CACVJ,KAAK,GACLC,IAAI,KAIR,EAAKI,QAAU,EAAKA,QAAQC,KAAb,gBACf,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBACnB,EAAKE,UAAY,EAAKA,UAAUF,KAAf,gBAZD,E,2CAelB,SAAQG,GACNA,EAAEC,iBACF,IAAMC,EAAUC,KAAKT,MAAMC,YAC3B,GAAmB,KAAhBO,EAAQX,KAAW,CACpB,IAAMJ,EAAK,sBAAOgB,KAAKT,MAAMP,OAAlB,CAAyBe,IACtCC,KAAKC,SAAS,CACZjB,MAAOA,EACPQ,YAAY,CACVJ,KAAK,GACLC,IAAI,S,yBAMV,SAAYQ,GACVG,KAAKC,SAAS,CACZT,YAAY,CACVJ,KAAMS,EAAEK,OAAOC,MACfd,IAAKe,KAAKC,W,uBAKhB,SAAUjB,EAAKC,GACbiB,QAAQC,IAAI,SAASP,KAAKT,MAAMP,OAChC,IAAMA,EAAQgB,KAAKT,MAAMP,MACzBA,EAAMC,KAAI,SAAAC,GACLA,EAAKG,MAAMA,IACZiB,QAAQC,IAAIrB,EAAKG,IAAK,OAAOA,GAC7BH,EAAKE,KAAMA,MAGfY,KAAKC,SAAS,CACZjB,MAAOA,M,oBAMZ,WACC,OAEE,qBAAKG,UAAU,MAAf,SACQ,mCACE,uBAAMqB,GAAG,OAAOC,SAAUT,KAAKP,QAA/B,UACE,uBAAOiB,KAAK,OAAOC,YAAY,iBAAiBR,MAAQH,KAAKT,MAAMC,YAAYJ,KAAMwB,SAAUZ,KAAKL,cACpG,wBAAQe,KAAK,SAAb,oBAEF,4BAAIV,KAAKT,MAAMP,MAAMI,OAEnB,cAAC,EAAD,CAAWJ,MAAOgB,KAAKT,MAAMP,MAAQY,UAAWI,KAAKJ,qB,GAnEnDiB,IAAMC,YCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f1d5c574.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\n\r\nfunction ListItems(props){\r\n  \r\n    const items = props.items;\r\n    const listItems = items.map(item =>\r\n   {\r\n       return <div className=\"list\" key={item.key}>\r\n     <p>\r\n        <h2> {item.text}</h2>\r\n     </p>  \r\n    </div>})\r\n \r\n    return (\r\n            <div>\r\n              {listItems}\r\n            </div>\r\n            );\r\n  }\r\n\r\nexport default ListItems;","import React from 'react';\nimport ListItems from './components/ListItems';\nimport './App.css'\n\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      items:[],\n      currentItem:{\n        text:'',\n        key:''\n        \n      }\n    }\n    this.addItem = this.addItem.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n    this.setUpdate = this.setUpdate.bind(this);\n  }\n  \n  addItem(e){\n    e.preventDefault();\n    const newItem = this.state.currentItem;\n    if(newItem.text !==\"\"){\n      const items = [...this.state.items, newItem];\n    this.setState({\n      items: items,\n      currentItem:{\n        text:'',\n        key:''\n        \n      }\n    })\n    }\n  }\n  handleInput(e){\n    this.setState({\n      currentItem:{\n        text: e.target.value,\n        key: Date.now()\n      }\n    })\n  }\n  \n  setUpdate(text,key){\n    console.log(\"items:\"+this.state.items);\n    const items = this.state.items;\n    items.map(item=>{      \n      if(item.key===key){\n        console.log(item.key +\"    \"+key)\n        item.text= text;\n      }\n    })\n    this.setState({\n      items: items\n    })\n    \n    \n   \n  }\n render(){\n  return (\n    \n    <div className=\"App\">\n            <header>\n              <form id=\"form\" onSubmit={this.addItem}>\n                <input type=\"text\" placeholder=\"Enter text....\" value= {this.state.currentItem.text} onChange={this.handleInput}></input>\n                <button type=\"submit\">Add</button>\n              </form>\n              <p>{this.state.items.text}</p>\n              \n                <ListItems items={this.state.items}  setUpdate={this.setUpdate}/>\n              \n            </header>\n\n          </div>\n          \n    \n  );\n }\n}\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}